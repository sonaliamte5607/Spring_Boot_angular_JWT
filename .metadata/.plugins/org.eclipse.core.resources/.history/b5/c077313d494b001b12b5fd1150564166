package com.assignment.springjwt.security.services;

import java.util.Collection;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import com.assignment.springjwt.models.Manager;
import com.fasterxml.jackson.annotation.JsonIgnore;

public class ManagerDetailsImpl implements UserDetails {
	private static final long serialVersionUID = 1L;

	private Long id;

	private String username;

	private String email;

	@JsonIgnore
	private String password;

	private Collection<? extends GrantedAuthority> authorities;

	private String firstname;
	
	private String lastname;

	private String address;

	private String dob;
	
	private String company;



	public ManagerDetailsImpl(Long id, String username,String firstname,String lastname,String email, String password ) {
			
		this.id = id;
		this.username=username; 
		this.firstname=firstname;
		this.lastname=lastname;
		this.email = email;
		this.password = password;

	}

	public static ManagerDetailsImpl build(Manager user) {
		
		return new ManagerDetailsImpl(
				
				user.getId(), 
				user.getUsername(), 
       			user.getFirstname(),
				user.getLastname(),
				user.getEmail(),
				user.getPassword()
				
				);
	}

	@Override
	public Collection<? extends GrantedAuthority> getAuthorities() {
		return authorities;
	}

	public Long getId() {
		return id;
	}

	public String getEmail() {
		return email;
	}

	@Override
	public String getPassword() {
		return password;
	}

	@Override
	public String getUsername() {
		return username;
	}

	@Override
	public boolean isAccountNonExpired() {
		return true;
	}

	@Override
	public boolean isAccountNonLocked() {
		return true;
	}

	@Override
	public boolean isCredentialsNonExpired() {
		return true;
	}

	@Override
	public boolean isEnabled() {
		return true;
	}
	
	

	public String getFirstname() {
		return firstname;
	}

	

	public String getLastname() {
		return lastname;
	}

	

	@Override
	public boolean equals(Object o) {
		if (this == o)
			return true;
		if (o == null || getClass() != o.getClass())
			return false;
		ManagerDetailsImpl user = (ManagerDetailsImpl) o;
		return Objects.equals(id, user.id);
	}
}

